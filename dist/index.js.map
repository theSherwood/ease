{
  "version": 3,
  "sources": ["../src/fridx.ts", "../src/storage.ts", "../src/state.ts", "../src/types.ts", "../src/events.ts", "../src/vdom.ts", "../src/audio.ts", "../src/index.ts"],
  "sourcesContent": ["// License: CC0 (no rights reserved).\n\n// This is based on https://observablehq.com/@dgreensp/implementing-fractional-indexing\n\nexport const BASE_62_DIGITS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n\n// `a` may be empty string, `b` is null or non-empty string.\n// `a < b` lexicographically if `b` is non-null.\n// no trailing zeros allowed.\n// digits is a string such as '0123456789' for base 10.  Digits must be in\n// ascending character code order!\n/**\n * @param {string} a\n * @param {string | null | undefined} b\n * @param {string} digits\n * @returns {string}\n */\nfunction midpoint(a, b, digits) {\n  const zero = digits[0];\n  if (b != null && a >= b) {\n    throw new Error(a + ' >= ' + b);\n  }\n  if (a.slice(-1) === zero || (b && b.slice(-1) === zero)) {\n    throw new Error('trailing zero');\n  }\n  if (b) {\n    // remove longest common prefix.  pad `a` with 0s as we\n    // go.  note that we don't need to pad `b`, because it can't\n    // end before `a` while traversing the common prefix.\n    let n = 0;\n    while ((a[n] || zero) === b[n]) {\n      n++;\n    }\n    if (n > 0) {\n      return b.slice(0, n) + midpoint(a.slice(n), b.slice(n), digits);\n    }\n  }\n  // first digits (or lack of digit) are different\n  const digitA = a ? digits.indexOf(a[0]) : 0;\n  const digitB = b != null ? digits.indexOf(b[0]) : digits.length;\n  if (digitB - digitA > 1) {\n    const midDigit = Math.round(0.5 * (digitA + digitB));\n    return digits[midDigit];\n  } else {\n    // first digits are consecutive\n    if (b && b.length > 1) {\n      return b.slice(0, 1);\n    } else {\n      // `b` is null or has length 1 (a single digit).\n      // the first digit of `a` is the previous digit to `b`,\n      // or 9 if `b` is null.\n      // given, for example, midpoint('49', '5'), return\n      // '4' + midpoint('9', null), which will become\n      // '4' + '9' + midpoint('', null), which is '495'\n      return digits[digitA] + midpoint(a.slice(1), null, digits);\n    }\n  }\n}\n\n/**\n * @param {string} int\n * @return {void}\n */\n\nfunction validateInteger(int) {\n  if (int.length !== getIntegerLength(int[0])) {\n    throw new Error('invalid integer part of order key: ' + int);\n  }\n}\n\n/**\n * @param {string} head\n * @return {number}\n */\n\nfunction getIntegerLength(head) {\n  if (head >= 'a' && head <= 'z') {\n    return head.charCodeAt(0) - 'a'.charCodeAt(0) + 2;\n  } else if (head >= 'A' && head <= 'Z') {\n    return 'Z'.charCodeAt(0) - head.charCodeAt(0) + 2;\n  } else {\n    throw new Error('invalid order key head: ' + head);\n  }\n}\n\n/**\n * @param {string} key\n * @return {string}\n */\n\nfunction getIntegerPart(key) {\n  const integerPartLength = getIntegerLength(key[0]);\n  if (integerPartLength > key.length) {\n    throw new Error('invalid order key: ' + key);\n  }\n  return key.slice(0, integerPartLength);\n}\n\n/**\n * @param {string} key\n * @param {string} digits\n * @return {void}\n */\n\nfunction validateOrderKey(key, digits) {\n  if (key === 'A' + digits[0].repeat(26)) {\n    throw new Error('invalid order key: ' + key);\n  }\n  // getIntegerPart will throw if the first character is bad,\n  // or the key is too short.  we'd call it to check these things\n  // even if we didn't need the result\n  const i = getIntegerPart(key);\n  const f = key.slice(i.length);\n  if (f.slice(-1) === digits[0]) {\n    throw new Error('invalid order key: ' + key);\n  }\n}\n\n// note that this may return null, as there is a largest integer\n/**\n * @param {string} x\n * @param {string} digits\n * @return {string | null}\n */\nfunction incrementInteger(x, digits) {\n  validateInteger(x);\n  const [head, ...digs] = x.split('');\n  let carry = true;\n  for (let i = digs.length - 1; carry && i >= 0; i--) {\n    const d = digits.indexOf(digs[i]) + 1;\n    if (d === digits.length) {\n      digs[i] = digits[0];\n    } else {\n      digs[i] = digits[d];\n      carry = false;\n    }\n  }\n  if (carry) {\n    if (head === 'Z') {\n      return 'a' + digits[0];\n    }\n    if (head === 'z') {\n      return null;\n    }\n    const h = String.fromCharCode(head.charCodeAt(0) + 1);\n    if (h > 'a') {\n      digs.push(digits[0]);\n    } else {\n      digs.pop();\n    }\n    return h + digs.join('');\n  } else {\n    return head + digs.join('');\n  }\n}\n\n// note that this may return null, as there is a smallest integer\n/**\n * @param {string} x\n * @param {string} digits\n * @return {string | null}\n */\n\nfunction decrementInteger(x, digits) {\n  validateInteger(x);\n  const [head, ...digs] = x.split('');\n  let borrow = true;\n  for (let i = digs.length - 1; borrow && i >= 0; i--) {\n    const d = digits.indexOf(digs[i]) - 1;\n    if (d === -1) {\n      digs[i] = digits.slice(-1);\n    } else {\n      digs[i] = digits[d];\n      borrow = false;\n    }\n  }\n  if (borrow) {\n    if (head === 'a') {\n      return 'Z' + digits.slice(-1);\n    }\n    if (head === 'A') {\n      return null;\n    }\n    const h = String.fromCharCode(head.charCodeAt(0) - 1);\n    if (h < 'Z') {\n      digs.push(digits.slice(-1));\n    } else {\n      digs.pop();\n    }\n    return h + digs.join('');\n  } else {\n    return head + digs.join('');\n  }\n}\n\n// `a` is an order key or null (START).\n// `b` is an order key or null (END).\n// `a < b` lexicographically if both are non-null.\n// digits is a string such as '0123456789' for base 10.  Digits must be in\n// ascending character code order!\n/**\n * @param {string | null | undefined} a\n * @param {string | null | undefined} b\n * @param {string=} digits\n * @return {string}\n */\nexport function generateKeyBetween(a, b, digits = BASE_62_DIGITS) {\n  if (a != null) {\n    validateOrderKey(a, digits);\n  }\n  if (b != null) {\n    validateOrderKey(b, digits);\n  }\n  if (a != null && b != null && a >= b) {\n    throw new Error(a + ' >= ' + b);\n  }\n  if (a == null) {\n    if (b == null) {\n      return 'a' + digits[0];\n    }\n\n    const ib = getIntegerPart(b);\n    const fb = b.slice(ib.length);\n    if (ib === 'A' + digits[0].repeat(26)) {\n      return ib + midpoint('', fb, digits);\n    }\n    if (ib < b) {\n      return ib;\n    }\n    const res = decrementInteger(ib, digits);\n    if (res == null) {\n      throw new Error('cannot decrement any more');\n    }\n    return res;\n  }\n\n  if (b == null) {\n    const ia = getIntegerPart(a);\n    const fa = a.slice(ia.length);\n    const i = incrementInteger(ia, digits);\n    return i == null ? ia + midpoint(fa, null, digits) : i;\n  }\n\n  const ia = getIntegerPart(a);\n  const fa = a.slice(ia.length);\n  const ib = getIntegerPart(b);\n  const fb = b.slice(ib.length);\n  if (ia === ib) {\n    return ia + midpoint(fa, fb, digits);\n  }\n  const i = incrementInteger(ia, digits);\n  if (i == null) {\n    throw new Error('cannot increment any more');\n  }\n  if (i < b) {\n    return i;\n  }\n  return ia + midpoint(fa, null, digits);\n}\n\n/**\n * same preconditions as generateKeysBetween.\n * n >= 0.\n * Returns an array of n distinct keys in sorted order.\n * If a and b are both null, returns [a0, a1, ...]\n * If one or the other is null, returns consecutive \"integer\"\n * keys.  Otherwise, returns relatively short keys between\n * a and b.\n * @param {string | null | undefined} a\n * @param {string | null | undefined} b\n * @param {number} n\n * @param {string} digits\n * @return {string[]}\n */\nexport function generateNKeysBetween(a, b, n, digits = BASE_62_DIGITS) {\n  if (n === 0) {\n    return [];\n  }\n  if (n === 1) {\n    return [generateKeyBetween(a, b, digits)];\n  }\n  if (b == null) {\n    let c = generateKeyBetween(a, b, digits);\n    const result = [c];\n    for (let i = 0; i < n - 1; i++) {\n      c = generateKeyBetween(c, b, digits);\n      result.push(c);\n    }\n    return result;\n  }\n  if (a == null) {\n    let c = generateKeyBetween(a, b, digits);\n    const result = [c];\n    for (let i = 0; i < n - 1; i++) {\n      c = generateKeyBetween(a, c, digits);\n      result.push(c);\n    }\n    result.reverse();\n    return result;\n  }\n  const mid = Math.floor(n / 2);\n  const c = generateKeyBetween(a, b, digits);\n  return [\n    ...generateNKeysBetween(a, c, mid, digits),\n    c,\n    ...generateNKeysBetween(c, b, n - mid - 1, digits),\n  ];\n}\n", "import { SessionSegment, Task } from './types';\n\nexport const EASE_STORE = 'ease_store';\n\nlet maxSessionId = 0;\nexport function getSessionId() {\n  return ++maxSessionId;\n}\n\nlet maxId = 0;\nexport function getId() {\n  return ++maxId;\n}\n\nexport function getColumnMax(db: IDBDatabase, storeName: string, column: string): Promise<number> {\n  return new Promise((resolve, reject) => {\n    let store;\n    try {\n      const transaction = db.transaction(storeName, 'readonly');\n      store = transaction.objectStore(storeName);\n    } catch (e) {\n      console.warn(e);\n      resolve(0);\n    }\n    let index = store.index('myColumn');\n    // Use the .openCursor() method with descending order on the primary key\n    const request = index.openCursor(null, 'prev');\n    request.onsuccess = (event) => {\n      const cursor = event.target.result;\n      if (cursor) {\n        resolve(cursor.value[column]); // Max value\n      } else {\n        resolve(0); // No records found\n      }\n    };\n    request.onerror = () => reject(`Error retrieving max \"${column}\"`);\n  });\n}\n\nexport function getMaxIdForStore(db: IDBDatabase, storeName: string): Promise<number> {\n  return new Promise((resolve, reject) => {\n    let store;\n    try {\n      const transaction = db.transaction(storeName, 'readonly');\n      store = transaction.objectStore(storeName);\n    } catch (e) {\n      console.warn(e);\n      resolve(0);\n    }\n    // Use the .openCursor() method with descending order on the primary key\n    const request = store.openCursor(null, 'prev');\n    request.onsuccess = (event) => {\n      const cursor = event.target.result;\n      if (cursor) {\n        resolve(cursor.key); // Max ID\n      } else {\n        resolve(0); // No records found\n      }\n    };\n    request.onerror = () => reject('Error retrieving max ID');\n  });\n}\n\nexport class KVStore<T> {\n  db: IDBDatabase | null = null;\n  readonly dbName: string;\n  readonly storeName: string;\n\n  constructor(dbName: string, storeName: string) {\n    this.dbName = dbName;\n    this.storeName = storeName;\n  }\n\n  async connect(): Promise<IDBDatabase> {\n    if (this.db) return this.db;\n\n    return new Promise((resolve, reject) => {\n      const request = indexedDB.open(this.dbName, 1);\n\n      request.onerror = () => reject(request.error);\n      request.onsuccess = () => {\n        this.db = request.result;\n        resolve(request.result);\n      };\n\n      request.onupgradeneeded = (event) => {\n        const db = (event.target as IDBOpenDBRequest).result;\n        if (!db.objectStoreNames.contains(this.storeName)) {\n          db.createObjectStore(this.storeName);\n        }\n      };\n    });\n  }\n\n  async set(key: string, value: T): Promise<void> {\n    const db = await this.connect();\n    return new Promise((resolve, reject) => {\n      const tx = db.transaction(this.storeName, 'readwrite');\n      const store = tx.objectStore(this.storeName);\n      const request = store.put(value, key);\n\n      request.onerror = () => reject(request.error);\n      request.onsuccess = () => resolve();\n    });\n  }\n\n  async get(key: string): Promise<T | null> {\n    const db = await this.connect();\n    return new Promise((resolve, reject) => {\n      const tx = db.transaction(this.storeName, 'readonly');\n      const store = tx.objectStore(this.storeName);\n      const request = store.get(key);\n\n      request.onerror = () => reject(request.error);\n      request.onsuccess = () => resolve(request.result || null);\n    });\n  }\n\n  async delete(key: string): Promise<void> {\n    const db = await this.connect();\n    return new Promise((resolve, reject) => {\n      const tx = db.transaction(this.storeName, 'readwrite');\n      const store = tx.objectStore(this.storeName);\n      const request = store.delete(key);\n\n      request.onerror = () => reject(request.error);\n      request.onsuccess = () => resolve();\n    });\n  }\n}\n\ninterface HasId {\n  id?: number;\n}\n\nexport class ListStore<T extends HasId> {\n  db: IDBDatabase | null = null;\n  readonly dbName: string;\n  readonly storeName: string;\n  readonly indexes: { name: string; unique: boolean }[];\n\n  constructor(\n    dbName: string,\n    storeName: string,\n    options: { indexes?: { name: string; unique: boolean }[] } = { indexes: [] },\n  ) {\n    this.dbName = dbName;\n    this.storeName = storeName;\n    this.indexes = options.indexes || [];\n  }\n\n  async connect(): Promise<IDBDatabase> {\n    if (this.db) return this.db;\n\n    return new Promise((resolve, reject) => {\n      const request = indexedDB.open(this.dbName, 1);\n\n      request.onerror = () => reject(request.error);\n      request.onsuccess = () => {\n        this.db = request.result;\n        resolve(request.result);\n      };\n\n      request.onupgradeneeded = (event) => {\n        const db = (event.target as IDBOpenDBRequest).result;\n        let store;\n        if (!db.objectStoreNames.contains(this.storeName)) {\n          store = db.createObjectStore(this.storeName, { keyPath: 'id', autoIncrement: true });\n        } else {\n          store = (event.target as IDBOpenDBRequest).transaction!.objectStore('myStore');\n        }\n        for (const { name, unique } of this.indexes) {\n          if (!store.indexNames.contains(name)) {\n            store.createIndex(name, name, { unique });\n          }\n        }\n      };\n    });\n  }\n\n  async add(record: T): Promise<void> {\n    const db = await this.connect();\n    return new Promise((resolve, reject) => {\n      const tx = db.transaction(this.storeName, 'readwrite');\n      const store = tx.objectStore(this.storeName);\n      store.add(record);\n      tx.oncomplete = () => resolve();\n      tx.onerror = () => reject(tx.error);\n    });\n  }\n\n  async bulkAdd(records: T[]): Promise<void> {\n    const db = await this.connect();\n    return new Promise((resolve, reject) => {\n      const tx = db.transaction(this.storeName, 'readwrite');\n      const store = tx.objectStore(this.storeName);\n      for (const record of records) {\n        store.add(record);\n      }\n      tx.oncomplete = () => resolve();\n      tx.onerror = () => reject(tx.error);\n    });\n  }\n\n  async get(id: number): Promise<T | null> {\n    const db = await this.connect();\n    return new Promise((resolve, reject) => {\n      const tx = db.transaction(this.storeName, 'readonly');\n      const store = tx.objectStore(this.storeName);\n      const request = store.get(id);\n      request.onerror = () => reject(request.error);\n      request.onsuccess = () => resolve(request.result || null);\n    });\n  }\n\n  async getAll(): Promise<T[]> {\n    const db = await this.connect();\n    return new Promise((resolve, reject) => {\n      const tx = db.transaction(this.storeName, 'readonly');\n      const store = tx.objectStore(this.storeName);\n      const request = store.getAll();\n\n      request.onerror = () => reject(request.error);\n      request.onsuccess = () => resolve(request.result);\n    });\n  }\n\n  async delete(id: number): Promise<void> {\n    const db = await this.connect();\n    return new Promise((resolve, reject) => {\n      const tx = db.transaction(this.storeName, 'readwrite');\n      const store = tx.objectStore(this.storeName);\n      store.delete(id);\n      tx.oncomplete = () => resolve();\n      tx.onerror = () => reject(tx.error);\n    });\n  }\n\n  async upsert(record: Partial<T>): Promise<void> {\n    const db = await this.connect();\n    return new Promise((resolve, reject) => {\n      const tx = db.transaction(this.storeName, 'readwrite');\n      const store = tx.objectStore(this.storeName);\n      store.put(record);\n      tx.oncomplete = () => resolve();\n      tx.onerror = () => reject(tx.error);\n    });\n  }\n\n  async *iterate(): AsyncGenerator<T> {\n    const db = await this.connect();\n    const tx = db.transaction(this.storeName, 'readonly');\n    const store = tx.objectStore(this.storeName);\n    const request = store.openCursor();\n\n    let cursor: IDBCursorWithValue | null = await new Promise((resolve) => {\n      request.onsuccess = () => resolve(request.result);\n    });\n\n    while (cursor) {\n      yield cursor.value;\n      cursor = await new Promise((resolve) => {\n        cursor!.continue();\n        request.onsuccess = () => resolve(request.result);\n      });\n    }\n  }\n}\n\nexport const taskStore = new ListStore<Task>(EASE_STORE, 'tasks', {\n  indexes: [{ name: 'id', unique: true }],\n});\nexport const audioStore = new ListStore<Task>(EASE_STORE, 'audio');\nexport const sessionSegmentStore = new ListStore<SessionSegment>(EASE_STORE, 'sessionSegments', {\n  indexes: [{ name: 'sessionId', unique: false }],\n});\n\nexport async function setupStore() {\n  await taskStore.connect();\n  await audioStore.connect();\n  let id = await getMaxIdForStore(taskStore.db!, 'tasks');\n  if (id > maxId) maxId = id;\n  id = await getMaxIdForStore(audioStore.db!, 'audio');\n  if (id > maxId) maxId = id;\n  maxSessionId = await getMaxIdForStore(sessionSegmentStore.db!, 'sessionSegments');\n  console.log('maxSessionId', maxSessionId);\n}\n", "import { APP_IDLE, AppState, AppStatus, TaskList } from './types';\n\n// const POMODORO_DURATION_DEFAULT = 25 * 60;\nconst POMODORO_DURATION_DEFAULT = 5;\n// const BREAK_DURATION_DEFAULT = 5 * 60;\nconst BREAK_DURATION_DEFAULT = 5;\nconst COUNTUP_DEFAULT = false;\n// const SPEAKER_DEFAULT = 'johnny_cash';\nconst SPEAKER_DEFAULT = 'rick_sanchez';\n\nexport const sessionTasks: TaskList = { list: [] };\nexport const recurringTasks: TaskList = { list: [] };\nexport const completedTasks: TaskList = { list: [] };\n\nconst tabId = Math.random().toString(36);\nconsole.log('tabId', tabId);\n\nexport const appState: AppState = {\n  // Tab coordination\n  tabId,\n  tabs: [tabId],\n  leader: '',\n\n  activeUtterance: null,\n\n  // Stored in localStorage\n  status: 0,\n  sessionId: 0,\n  checkpoint: 0,\n  pomodoroDuration: 0,\n  breakDuration: 0,\n  countup: false,\n  speaker: '',\n\n  // Task data\n  sessionTasks,\n  recurringTasks,\n  completedTasks,\n};\nreadFromLocalStorageUnsafe();\n\nfunction boolFromString(value: string | null, defaultBool = true): boolean {\n  if (value === 'true') return true;\n  if (value === 'false') return false;\n  return defaultBool;\n}\n\nfunction readFromLocalStorageUnsafe() {\n  appState.status = Number(localStorage.getItem('appStatus')) as AppStatus;\n  appState.sessionId = Number(localStorage.getItem('sessionId')) || 0;\n  appState.checkpoint = Number(localStorage.getItem('checkpoint')) || 0;\n  appState.pomodoroDuration =\n    Number(localStorage.getItem('pomodoroDefault')) || POMODORO_DURATION_DEFAULT;\n  appState.breakDuration = Number(localStorage.getItem('breakDefault')) || BREAK_DURATION_DEFAULT;\n  appState.countup = boolFromString(localStorage.getItem('countup'), COUNTUP_DEFAULT);\n  appState.speaker = localStorage.getItem('speaker') || SPEAKER_DEFAULT;\n}\n\nexport async function readFromLocalStorage() {\n  await navigator.locks.request('localStorage', async () => {\n    readFromLocalStorageUnsafe();\n  });\n}\n\nexport async function writeToLocalStorage() {\n  await navigator.locks.request('localStorage', async () => {\n    localStorage.setItem('appStatus', appState.status.toString());\n    localStorage.setItem('sessionId', appState.sessionId.toString());\n    localStorage.setItem('checkpoint', appState.checkpoint.toString());\n    localStorage.setItem('pomodoroDefault', appState.pomodoroDuration.toString());\n    localStorage.setItem('breakDefault', appState.breakDuration.toString());\n    localStorage.setItem('countup', appState.countup.toString());\n    localStorage.setItem('speaker', appState.speaker);\n  });\n}\n\nexport function isLeader() {\n  return appState.tabId === appState.leader;\n}\n", "export const TASK_SESSION = 0;\nexport const TASK_ACTIVE = 1;\nexport const TASK_RECURRING = 2;\nexport const TASK_COMPLETED = 3;\n\nexport type TaskStatus =\n  | typeof TASK_SESSION\n  | typeof TASK_ACTIVE\n  | typeof TASK_RECURRING\n  | typeof TASK_COMPLETED;\n\nexport type Task = {\n  id: number;\n  description: string;\n  status: TaskStatus;\n  timeEstimate: number;\n  timeRemaining: number;\n  createdAt: number;\n  completedAt: number;\n  fridx: string;\n};\n\nexport type TaskList = { list: Task[] };\n\nexport const SESSION_ACTIVE = 0;\nexport const SESSION_PAUSED = 1;\n\nexport type SessionKind = typeof SESSION_ACTIVE | typeof SESSION_PAUSED;\n\nexport type SessionSegment = {\n  id: number;\n  sessionId: number;\n  kind: SessionKind;\n  start: number;\n  end: number;\n};\n\nexport const APP_IDLE = 0;\nexport const APP_ACTIVE = 1;\nexport const APP_BREAK = 2;\n\nexport type AppStatus = typeof APP_ACTIVE | typeof APP_BREAK | typeof APP_IDLE;\n\nexport type AppState = {\n  tabId: string;\n  tabs: string[];\n  leader: string;\n\n  activeUtterance: SpeechSynthesisUtterance | null;\n\n  status: AppStatus;\n  sessionId: number;\n  checkpoint: number;\n  countup: boolean;\n  pomodoroDuration: number;\n  breakDuration: number;\n  speaker: string;\n\n  sessionTasks: TaskList;\n  recurringTasks: TaskList;\n  completedTasks: TaskList;\n};\n", "import { generateKeyBetween } from './fridx';\nimport {\n  appState,\n  completedTasks,\n  readFromLocalStorage,\n  recurringTasks,\n  sessionTasks,\n  writeToLocalStorage,\n} from './state';\nimport { ListStore, EASE_STORE, getId, taskStore, audioStore } from './storage';\nimport {\n  TASK_COMPLETED,\n  TASK_SESSION,\n  TASK_RECURRING,\n  Task,\n  TaskList,\n  TaskStatus,\n  APP_ACTIVE,\n  APP_BREAK,\n  APP_IDLE,\n  AppStatus,\n} from './types';\n\nexport const callback = {\n  onChange: () => {\n    console.log('callback onChange');\n  },\n};\n\nconst channel = new BroadcastChannel('ease');\ntype MessageTypes =\n  | 'rollcallInit'\n  | 'rollcallRespond'\n  | 'goodbye'\n  | 'updateTask'\n  | 'resetAudio'\n  | 'sessionChange';\ntype MessageData = {\n  type: MessageTypes;\n  id: number;\n  tabId?: string;\n};\ntype Message = {\n  data: MessageData;\n  sender: string;\n};\n\n// Map of pending messages and their resolvers so that the sender can await a response\nfunction postMessage(data: MessageData) {\n  channel.postMessage({ data, sender: appState.tabId } as Message);\n}\n\n// All tabs update state from the storage on message\nchannel.addEventListener('message', async (e) => {\n  let { data, sender }: Message = e.data;\n  console.log('received message', data);\n  if (data.type === 'rollcallInit') {\n    appState.tabs = [appState.tabId, sender];\n    postMessage({ type: 'rollcallRespond', id: 0 });\n    callback.onChange();\n  }\n  if (data.type === 'rollcallRespond') {\n    appState.tabs.push(sender.toString());\n    callback.onChange();\n  }\n  if (data.type === 'goodbye') {\n    appState.tabs = appState.tabs.filter((tab) => tab !== sender);\n    appState.leader = data.tabId as string;\n    callback.onChange;\n  }\n  if (data.type === 'sessionChange') {\n    appState.leader = sender;\n    await readFromLocalStorage();\n    callback.onChange();\n  }\n  if (data.type === 'updateTask') {\n    appState.leader = sender;\n    removeTaskFromLists(data.id);\n    const task = await taskStore.get(data.id);\n    if (task !== null) addTaskToLists(task);\n    callback.onChange();\n  }\n  if (data.type === 'resetAudio') {\n    // TODO\n  }\n});\n\nexport function rollcall() {\n  appState.tabs = [appState.tabId];\n  postMessage({ type: 'rollcallInit', id: 0 });\n  callback.onChange();\n}\n\nexport async function flipCountDirection() {\n  appState.leader = appState.tabId;\n  appState.countup = !appState.countup;\n  callback.onChange();\n  await writeToLocalStorage();\n  postMessage({ type: 'sessionChange', id: 0 });\n}\n\nexport async function startSession() {\n  appState.leader = appState.tabId;\n  appState.status = APP_ACTIVE;\n  appState.sessionId = getId(); // TODO\n  appState.checkpoint = Date.now();\n  callback.onChange();\n  await writeToLocalStorage();\n  postMessage({ type: 'sessionChange', id: 0 });\n}\nexport async function pauseSession() {\n  appState.leader = appState.tabId;\n  appState.status = APP_BREAK;\n  appState.checkpoint = Date.now();\n  callback.onChange();\n  await writeToLocalStorage();\n  postMessage({ type: 'sessionChange', id: 0 });\n}\nexport async function endSession() {\n  appState.leader = appState.tabId;\n  appState.status = APP_IDLE;\n  appState.sessionId = 0;\n  appState.checkpoint = 0;\n  callback.onChange();\n  await writeToLocalStorage();\n  postMessage({ type: 'sessionChange', id: 0 });\n}\n\nwindow.addEventListener('beforeunload', async function (event) {\n  let tabs = appState.tabs;\n  postMessage({ type: 'goodbye', id: 0, tabId: tabs.filter((t) => t !== appState.tabId)[0] });\n  if (appState.status !== APP_IDLE && tabs.length === 1) {\n    console.log('Session is active.');\n    event.preventDefault();\n    endSession();\n  }\n});\n\nasync function storeTask(config: Task) {\n  config.id = getId();\n  if (!config.fridx) {\n    let lastTask;\n    if (config.status === TASK_SESSION) lastTask = sessionTasks.list[sessionTasks.list.length - 1];\n    if (config.status === TASK_RECURRING)\n      lastTask = recurringTasks.list[recurringTasks.list.length - 1];\n    if (config.status === TASK_COMPLETED)\n      lastTask = completedTasks.list[completedTasks.list.length - 1];\n    config.fridx = generateKeyBetween(lastTask?.fridx || null, null);\n  }\n  await taskStore.add(config);\n  return config;\n}\n\nfunction removeTaskFromLists(task: number | Task) {\n  if (typeof task === 'number') {\n    removeTaskFromList(task, sessionTasks);\n    removeTaskFromList(task, recurringTasks);\n    removeTaskFromList(task, completedTasks);\n  } else {\n    if (task.status === TASK_SESSION) removeTaskFromList(task.id, sessionTasks);\n    if (task.status === TASK_RECURRING) removeTaskFromList(task.id, recurringTasks);\n    if (task.status === TASK_COMPLETED) removeTaskFromList(task.id, completedTasks);\n  }\n}\n\nfunction addTaskToLists(task: Task) {\n  if (task.status === TASK_SESSION) addTaskToList(task, sessionTasks);\n  if (task.status === TASK_RECURRING) addTaskToList(task, recurringTasks);\n  if (task.status === TASK_COMPLETED) addTaskToList(task, completedTasks);\n}\n\nexport function idxFromTask(id: number, status: TaskStatus) {\n  let list: Task[] = [];\n  if (status === TASK_SESSION) list = sessionTasks.list;\n  if (status === TASK_RECURRING) list = recurringTasks.list;\n  if (status === TASK_COMPLETED) list = completedTasks.list;\n  return { idx: list.findIndex((t) => t.id === id), list };\n}\n\nexport async function idxFromId(id: number) {\n  const taskConfig = await taskStore.get(id);\n  if (taskConfig === null) return { idx: -1, list: [] };\n  return idxFromTask(id, taskConfig.status);\n}\n\nexport async function taskFromId(id: number): Promise<Task | null> {\n  let storeTask = await taskStore.get(id);\n  if (!storeTask) return null;\n  let task: Task | undefined;\n  if (storeTask?.status === TASK_SESSION) task = sessionTasks.list.find((t) => t.id === id);\n  if (storeTask?.status === TASK_RECURRING) task = recurringTasks.list.find((t) => t.id === id);\n  if (storeTask?.status === TASK_COMPLETED) task = completedTasks.list.find((t) => t.id === id);\n  Object.assign(task!, storeTask);\n  return task!;\n}\n\nfunction addTaskToList(task: Task, list: TaskList) {\n  list.list.push(task);\n  list.list.sort((a, b) => (a.fridx > b.fridx ? 1 : -1));\n  list.list = list.list;\n  console.log('added task', task, list.list);\n}\n\nfunction removeTaskFromList(taskId: number, list: TaskList) {\n  let found = false;\n  const newList = list.list.filter((t) => {\n    if (t.id !== taskId) return true;\n    found = true;\n  });\n  if (found) list.list = newList;\n}\n\nexport async function populateTasks() {\n  for await (const task of taskStore.iterate()) {\n    addTaskToLists(task);\n  }\n  callback.onChange();\n}\n\nexport async function createTask(taskConfig: Task) {\n  appState.leader = appState.tabId;\n  const task = await storeTask(taskConfig);\n  addTaskToLists(task);\n  callback.onChange();\n  postMessage({ type: 'updateTask', id: task.id });\n}\n\nexport async function deleteTask(task: Task) {\n  appState.leader = appState.tabId;\n  await taskStore.delete(task.id);\n  removeTaskFromLists(task);\n  callback.onChange();\n  postMessage({ type: 'updateTask', id: task.id });\n}\n\nexport async function updateTask(task: Task, update: Partial<Task>) {\n  appState.leader = appState.tabId;\n  removeTaskFromLists(task);\n  const updatedTask = { ...task, ...update };\n  await taskStore.upsert(updatedTask);\n  addTaskToLists(updatedTask);\n  callback.onChange();\n  postMessage({ type: 'updateTask', id: task.id });\n}\n", "// Adapted and fixed bugs from little-vdom.js\n// https://gist.github.com/developit/2038b141b31287faa663f410b6649a87\n// https://gist.github.com/marvinhagemeister/8950b1032d67918d21950b3985259d78\n// Added refs, style maps\n\ntype VNode = {\n  _type: string | Function;\n  _props: string | Record<string, any>;\n  _children: (string | number | false | null | undefined | VNode | VNode[])[];\n  key: string;\n  dom?: Node;\n  _patched?: VNode;\n  _state?: Record<string, any>;\n};\n\nexport type DNode = Node & { _vnode?: VNode; style?: any; data?: any };\n\nexport function h(type, props, ...children): VNode {\n  return {\n    _type: type,\n    _props: props, // An object for components and DOM nodes, a string for text nodes.\n    _children: children.filter((_) => !!_), // Filter out null and undefined children.\n    key: props && (props.key || props.id),\n  };\n}\n\nexport function Fragment(props) {\n  return props.children;\n}\n\nexport function render(\n  newVNode: VNode,\n  dom: DNode,\n  oldVNode = dom._vnode || (dom._vnode = {} as VNode),\n) {\n  return diff(h(Fragment, {}, [newVNode]), dom, oldVNode);\n}\n\nexport function diff(newVNode: VNode, dom: DNode, oldVNode: VNode, currentChildIndex = -1) {\n  if (Array.isArray(newVNode)) {\n    return diffChildren(dom, newVNode, oldVNode);\n  }\n\n  // Check if we have a component. Only functions have a .call() method.\n  // Here components have a different signature compared to Preact or React:\n  //\n  // (props, state, updateFn) => VNode;\n  //\n  // The 3rd argument is basically similar concept-wise to setState\n  else if (typeof newVNode._type === 'function') {\n    // Initialize state of component if necessary\n    newVNode._state = oldVNode._state || {};\n    // Add children to props\n    const props = { children: newVNode._children, ...(newVNode._props as Record<string, any>) };\n    const renderResult = newVNode._type(\n      props,\n      newVNode._state,\n      // Updater function that is passed as 3rd argument to components\n      (nextState) => {\n        // Update state with new value\n        Object.assign(newVNode._state!, nextState);\n        return diff(newVNode, dom, newVNode);\n      },\n    );\n\n    newVNode._patched = diff(\n      renderResult,\n      dom,\n      (oldVNode && oldVNode._patched) || ({} as VNode),\n      currentChildIndex,\n    );\n    // newVNode.dom = dom;\n\n    return (dom._vnode = newVNode);\n  }\n\n  // Standard DOM elements\n  else {\n    // Create a DOM element and assign it to the vnode. If one already exists,\n    // we will reuse the existing one and not create a new node.\n    const newDom: DNode =\n      oldVNode.dom ||\n      (newVNode._type\n        ? document.createElement(newVNode._type)\n        : // If we have a text node, vnode.props will be a string\n          new Text(newVNode._props as string));\n\n    // diff props\n    if (newVNode._props != oldVNode._props) {\n      // If newVNode.type is truthy (=not an empty string) we have a DOM node\n      if (newVNode._type) {\n        const { key, ref, ...newProps } = newVNode._props as Record<string, any>;\n        if (ref) ref.current = newDom;\n\n        for (let name in newProps) {\n          const value = newProps[name];\n          // A string object has a trim method.\n          if (name === 'style' && !value.trim) {\n            for (const n in value) {\n              newDom.style[n] = value[n];\n            }\n          } else if (value != (oldVNode._props && oldVNode._props[name])) {\n            if (name in newDom || (name = name.toLowerCase()) in newDom) {\n              newDom[name] = value;\n            } else if (value != null) {\n              (newDom as Element).setAttribute(name, value);\n            } else {\n              (newDom as Element).removeAttribute(name);\n            }\n          }\n        }\n      }\n\n      // Otherwise a text node\n      else {\n        // Update text node content\n        newDom.data = newVNode._props;\n      }\n    }\n\n    // diff children (typed/keyed)\n    diffChildren(newDom, newVNode._children, oldVNode);\n\n    // insert at position\n    if (!oldVNode.dom || currentChildIndex > -1) {\n      dom.insertBefore((newVNode.dom = newDom), dom.childNodes[currentChildIndex + 1] || null);\n    }\n\n    return (dom._vnode = Object.assign(oldVNode, newVNode));\n  }\n}\n\nfunction diffChildren(parentDom, newChildren, oldVNode) {\n  const oldChildren = oldVNode._normalizedChildren || [];\n  oldVNode._normalizedChildren = newChildren.concat.apply([], newChildren).map((child, index) => {\n    // If the vnode has no children we assume that we have a string and\n    // convert it into a text vnode.\n    const nextNewChild = child._children ? child : h('', '' + child);\n\n    // If we have previous children we search for one that matches our\n    // current vnode.\n    const nextOldChild =\n      oldChildren.find((oldChild, childIndex) => {\n        let result =\n          oldChild &&\n          oldChild._type == nextNewChild._type &&\n          oldChild.key == nextNewChild.key &&\n          (childIndex == index && (index = undefined), (oldChildren[childIndex] = 0), oldChild);\n        // if (result) console.log('found vnode', result);\n        return result;\n      }) || {};\n\n    // Continue diffing recursively against the next child.\n    return diff(nextNewChild, parentDom, nextOldChild, index);\n  });\n\n  // remove old children if there are any\n  oldChildren.forEach(removePatchedChildren);\n\n  return oldVNode;\n}\n\nfunction removePatchedChildren(child) {\n  const { _children = [], _patched } = child;\n  // remove children\n  if (child.dom) {\n    child.dom.remove();\n  } else {\n    _children.forEach((c) => c && removePatchedChildren(c));\n    _patched && removePatchedChildren(_patched);\n  }\n}\n\nconst tags = ['div', 'h1', 'button', 'p', 'input', 'span'] as const;\nexport const dom = tags.reduce((acc, tag) => {\n  acc[tag] = (props, ...children) => h(tag, props, ...children);\n  return acc;\n}, {}) as unknown as Record<\n  (typeof tags)[number],\n  (props: Record<string, any>, ...children: VNode['_children']) => VNode\n>;\n", "export class AudioPlayer {\n  private audio: HTMLAudioElement | null = null;\n  private currentResolver: (() => void) | null = null;\n\n  play(audioUrl: string): Promise<void> {\n    // Stop any existing audio\n    this.stop();\n\n    return new Promise((resolve, reject) => {\n      this.currentResolver = resolve;\n      this.audio = new Audio(audioUrl);\n\n      // Handle natural completion\n      this.audio.addEventListener('ended', () => {\n        this.currentResolver?.();\n        this.currentResolver = null;\n        this.audio = null;\n      });\n\n      // Start playback\n      this.audio.play().catch((error) => {\n        reject(error);\n        this.currentResolver = null;\n        this.audio = null;\n      });\n    });\n  }\n\n  stop(): void {\n    if (this.audio) {\n      this.audio.pause();\n      this.audio.currentTime = 0;\n      this.currentResolver?.();\n      this.currentResolver = null;\n      this.audio = null;\n    }\n  }\n\n  setVolume(volume: number): void {\n    if (this.audio) {\n      this.audio.volume = volume;\n    }\n  }\n}\n\nconst speechPlayer = new AudioPlayer();\nconst musicPlayer = new AudioPlayer();\n\nexport async function playSpeech(audioUrl: string) {\n  musicPlayer.setVolume(0.5);\n  await speechPlayer.play(audioUrl);\n  musicPlayer.setVolume(1);\n}\nexport async function playMusic(audioUrl: string) {\n  await musicPlayer.play(audioUrl);\n}\n\nexport function stopSpeech() {\n  speechPlayer.stop();\n}\nexport function stopMusic() {\n  musicPlayer.stop();\n}\n", "import { generateKeyBetween } from './fridx';\nimport { setupStore } from './storage';\nimport {\n  createTask,\n  deleteTask,\n  updateTask,\n  populateTasks,\n  idxFromTask,\n  taskFromId,\n  callback,\n  startSession,\n  endSession,\n  pauseSession,\n  rollcall,\n  flipCountDirection,\n} from './events';\nimport { render, diff, h, dom, DNode } from './vdom';\nimport {\n  TASK_SESSION,\n  TASK_RECURRING,\n  TaskStatus,\n  TASK_COMPLETED,\n  Task,\n  TaskList,\n  AppState,\n  APP_IDLE,\n  APP_ACTIVE,\n  APP_BREAK,\n} from './types';\nimport { appState, isLeader } from './state';\nimport { playSpeech } from './audio';\nconst { div, h1, button, p, input, span } = dom;\n\nconst DEFAULT_TASK_TIME = 25 * 60;\n\nsetupStore().then(() => {\n  populateTasks();\n});\n\nrollcall();\n\nlet styles = {\n  task: {\n    borderTop: '2px solid transparent',\n    borderBottom: '2px solid transparent',\n    transition: 'all 0.2s ease',\n  },\n  taskDropTop: {\n    borderTop: '2px solid var(--accent)',\n  },\n  taskDropBottom: {\n    borderBottom: '2px solid var(--accent)',\n  },\n};\n\n/**\n * 1h 30m => 90 * 60\n * 2H => 2 * 60 * 60\n * 25m => 25 * 60\n * 30 => 30 * 60\n */\nfunction parseHumanReadableTime(hrTime: string): number {\n  try {\n    let timeStr = hrTime.trim().toLowerCase();\n    let time = 0;\n    let includesHours = timeStr.includes('h');\n    let includesMinutes = timeStr.includes('m');\n    if (includesHours) {\n      const hours = parseInt(timeStr.split('h', 2)[0]);\n      if (hours) time += hours * 60 * 60;\n      timeStr = timeStr.split('h', 2)[1];\n    }\n    if (includesMinutes) {\n      const minutes = parseInt(timeStr.split('m', 2)[0]);\n      if (minutes) time += minutes * 60;\n    }\n    if (!includesHours && !includesMinutes) {\n      time = parseInt(timeStr) * 60;\n    }\n    return time;\n  } catch (e) {\n    return DEFAULT_TASK_TIME;\n  }\n}\n\nfunction partitionTime(time: number): { hours; minutes; seconds } {\n  const hours = Math.floor(time / 3600);\n  const minutes = Math.floor((time % 3600) / 60);\n  const seconds = Math.floor(time % 60);\n  return { hours, minutes, seconds };\n}\n\nfunction formatTime(time: number): string {\n  const { hours, minutes, seconds } = partitionTime(time);\n  let res = '';\n  if (hours > 0) res += `${hours}h `;\n  if (minutes > 0) res += `${minutes}m`;\n  if (seconds > 0) res += `${seconds}s`;\n  if (res === '') res = '0m';\n  return res;\n}\n\nfunction padTime(time: number): string {\n  return time.toString().padStart(2, '0');\n}\n\nenum DragState {\n  None,\n  Top,\n  Bottom,\n}\n\nfunction sectionHeader({ title, collapsed, oncollapse, onexpand }) {\n  return div(\n    {},\n    button(\n      {\n        class: 'collapse-button',\n        onclick: () => {\n          if (collapsed) {\n            onexpand();\n          } else {\n            oncollapse();\n          }\n        },\n        onkeydown: (e) => {\n          console.log('key', e.key);\n          if (e.key === 'ArrowLeft') oncollapse();\n          if (e.key === 'ArrowRight') onexpand();\n        },\n      },\n      div({ class: 'collapse-icon' }, collapsed ? '\u25B8' : '\u25BE'),\n      h1({ class: 'section-header' }, title),\n    ),\n  );\n}\n\nfunction taskView(\n  { task, active = false }: { task: Task; active: boolean },\n  { dragState = DragState.None },\n  update,\n) {\n  function updateTimeEstimate(e) {\n    let time = parseHumanReadableTime(e.target.value);\n    updateTask(task, { timeEstimate: time });\n  }\n  const domId = `task-${task.id}`;\n\n  let resolvedStyles = styles.task;\n  if (dragState === DragState.Bottom) resolvedStyles = { ...styles.task, ...styles.taskDropBottom };\n  if (dragState === DragState.Top) resolvedStyles = { ...styles.task, ...styles.taskDropTop };\n\n  return div(\n    {\n      id: domId,\n      className: 'task',\n      style: resolvedStyles,\n      draggable: true,\n      ondragover: (e) => {\n        e.preventDefault();\n        e.dataTransfer.dropEffect = 'move';\n        // console.log('drag over', e);\n        const taskDiv = document.getElementById(domId) as HTMLElement;\n        // find whether the mouse is closer to the top or bottom of the element\n        const rect = taskDiv.getBoundingClientRect();\n        const y = e.clientY - rect.top;\n        if (y > rect.height / 2) {\n          update({ dragState: DragState.Bottom });\n        } else {\n          update({ dragState: DragState.Top });\n        }\n      },\n      ondrop: async (e) => {\n        e.preventDefault();\n        try {\n          console.log('drop?', e.dataTransfer.getData('text/plain'), e);\n          const taskId = parseInt(e.dataTransfer.getData('text/plain'));\n          const taskDiv = document.getElementById(domId) as HTMLElement;\n          const rect = taskDiv.getBoundingClientRect();\n          const y = e.clientY - rect.top;\n          let { idx, list } = idxFromTask(task.id, task.status);\n          let newFridx = '';\n          if (y > rect.height / 2) {\n            console.log('drop bottom');\n            // drop below\n            let otherTask = list[idx + 1];\n            let nextTaskFridx = otherTask?.fridx || null;\n            newFridx = generateKeyBetween(task.fridx, nextTaskFridx);\n          } else {\n            console.log('drop top');\n            // drop above\n            let prevTask = list[idx - 1];\n            let prevTaskFridx = prevTask?.fridx || null;\n            newFridx = generateKeyBetween(prevTaskFridx, task.fridx);\n          }\n          console.log('new fridx', newFridx, taskId);\n          let droppedTask = await taskFromId(taskId);\n          await updateTask(droppedTask!, { fridx: newFridx, status: task.status });\n        } catch (e) {\n          console.error(e);\n        } finally {\n          update({ dragState: DragState.None });\n        }\n      },\n      ondragleave: (e) => {\n        e.preventDefault();\n        update({ dragState: DragState.None });\n      },\n      ondragstart: (e) => {\n        console.log('drag start');\n        e.dataTransfer.setData('text/plain', task.id.toString());\n        e.dataTransfer.effectAllowed = 'move';\n      },\n    },\n    span({ class: 'drag-handle' }, '\u283F'),\n    input({\n      class: 'description-input',\n      value: task.description,\n      oninput: (e) => {\n        updateTask(task, { description: e.target.value });\n      },\n    }),\n    input({\n      class: 'time-input',\n      value: formatTime(task.timeEstimate),\n      onblur: (e) => {\n        updateTimeEstimate(e);\n      },\n      onkeydown: (e) => {\n        if (e.key === 'Enter') {\n          updateTimeEstimate(e);\n        }\n      },\n    }),\n    div(\n      {},\n      active && button({ onclick: () => updateTask(task, { status: TASK_COMPLETED }) }, '\u2713'),\n      task.status === TASK_RECURRING &&\n        button(\n          {\n            onclick: () => {\n              let description = task.description;\n              if (!description) return;\n              const time = Date.now();\n              createTask({\n                id: 0,\n                description,\n                status: TASK_SESSION,\n                timeEstimate: task.timeEstimate,\n                timeRemaining: 0,\n                createdAt: time,\n                completedAt: 0,\n                fridx: '',\n              });\n            },\n          },\n          '+',\n        ),\n      button({ class: 'delete-button', onclick: () => deleteTask(task) }, '\u2715'),\n    ),\n  );\n}\n\nfunction activeTaskView({ activeTask }: { activeTask: Task | null }) {\n  if (!activeTask) {\n    return div({ className: 'active-task' }, h1({}, 'No Active Task'));\n  }\n  return div(\n    { className: 'active-task' },\n    h1({}, 'Active Task'),\n    h(taskView, { task: activeTask, key: activeTask.id, active: true }),\n  );\n}\n\nfunction taskListView(tasks: TaskList) {\n  const taskListDiv = div(\n    { className: 'task-list' },\n    ...tasks.list.map((task) => h(taskView, { task, key: task.id })),\n  );\n  return taskListDiv;\n}\n\nfunction onCreateTask(status: TaskStatus, description: string) {\n  if (!description) return;\n  const time = Date.now();\n  createTask({\n    id: 0,\n    description,\n    status,\n    timeEstimate: DEFAULT_TASK_TIME,\n    timeRemaining: 0,\n    createdAt: time,\n    completedAt: 0,\n    fridx: '',\n  });\n}\n\nfunction newTaskInput({ status }: { status: TaskStatus }) {\n  return div(\n    { class: 'new-task' },\n    input({\n      type: 'text',\n      placeholder: 'Add a task',\n      onkeydown: (e) => {\n        if (e.key === 'Enter') {\n          onCreateTask(status, e.target.value);\n          e.target.value = '';\n        }\n      },\n    }),\n    div(\n      { style: { display: 'flex' } },\n      button(\n        {\n          class: 'square-button',\n          onclick: (e) => {\n            let inputEl = e.target.previousElementSibling as HTMLInputElement;\n            let value = inputEl.value;\n            if (!value) return;\n            onCreateTask(status, value);\n            inputEl.value = '';\n          },\n        },\n        '+',\n      ),\n      span({ class: 'square-button' }, ''),\n    ),\n  );\n}\n\nfunction sessionTasksView({ sessionTasks }: AppState, { collapsed = false }, update) {\n  return div(\n    { className: 'session-tasks' },\n    sectionHeader({\n      title: 'Session Tasks',\n      collapsed,\n      oncollapse: () => update({ collapsed: true }),\n      onexpand: () => update({ collapsed: false }),\n    }),\n    collapsed ? null : [h(taskListView, sessionTasks), h(newTaskInput, { status: TASK_SESSION })],\n  );\n}\n\nfunction recurringTasksView({ recurringTasks }: AppState, { collapsed = false }, update) {\n  return div(\n    { className: 'recurring-tasks' },\n    sectionHeader({\n      title: 'Recurring Tasks',\n      collapsed,\n      oncollapse: () => update({ collapsed: true }),\n      onexpand: () => update({ collapsed: false }),\n    }),\n    collapsed\n      ? null\n      : [h(taskListView, recurringTasks), h(newTaskInput, { status: TASK_RECURRING })],\n  );\n}\n\nfunction completedTasksView({ completedTasks }: AppState, { collapsed = true }, update) {\n  return div(\n    { className: 'completed-tasks' },\n    sectionHeader({\n      title: 'Completed Tasks',\n      collapsed,\n      oncollapse: () => update({ collapsed: true }),\n      onexpand: () => update({ collapsed: false }),\n    }),\n    collapsed ? null : h(taskListView, completedTasks),\n  );\n}\n\nfunction sessionButton({ onclick, label }: { onclick: () => void; label: string }) {\n  return button({ onclick }, label);\n}\n\nconst TWO_MINUTES = 4.9 * 60;\n\nfunction pomodoroTimer(\n  { checkpoint, countup, pomodoroDuration, breakDuration, status, speaker }: AppState,\n  { renderSignal = 0, prevTimeRemaining = 0 },\n  update,\n) {\n  let now = Date.now();\n  let negative = false;\n  let duration = status === APP_ACTIVE ? pomodoroDuration : breakDuration;\n  let timeElapsed = Math.floor((now - checkpoint) / 1000);\n  let timeRemaining = Math.floor(duration - timeElapsed);\n  let time = countup ? timeElapsed : timeRemaining;\n  if (time < 0) {\n    time = Math.abs(time);\n    negative = true;\n  }\n  let { hours, minutes, seconds } = partitionTime(time);\n\n  setTimeout(() => {\n    if (\n      appState.status !== status ||\n      appState.checkpoint !== checkpoint ||\n      appState.countup !== countup ||\n      appState.pomodoroDuration !== pomodoroDuration ||\n      appState.breakDuration !== breakDuration ||\n      appState.speaker !== speaker\n    )\n      return;\n    update({ renderSignal: renderSignal + 1, prevTimeRemaining: timeRemaining });\n  }, 400);\n\n  if (isLeader()) {\n    if (status === APP_BREAK) {\n      if (prevTimeRemaining > 0 && timeRemaining <= 0) {\n        playSpeech(`public/speech/break_over_${appState.speaker}.mp3`);\n      }\n    }\n    if (status === APP_ACTIVE) {\n      if (prevTimeRemaining > 0 && timeRemaining <= 0) {\n        playSpeech(`public/speech/break_start_${appState.speaker}.mp3`);\n      }\n    }\n  }\n\n  let className = 'pomodoro';\n  if (negative || (countup && time > duration)) className += ' elapsed';\n  let label = `${padTime(hours)}:${padTime(minutes)}:${padTime(seconds)}`;\n  if (negative) label = '-' + label;\n  return div(\n    { class: 'pomodoro-wrapper' },\n    button({ class: 'flip-icon', onclick: flipCountDirection }, '\u2B83'),\n    span({ className }, label),\n  );\n}\n\nfunction ui(props: AppState) {\n  console.log('ui', appState.tabs);\n  if (props.status === APP_IDLE || props.sessionTasks.list.length === 0) {\n    return div(\n      { className: 'tasks-bar' },\n      // props.tabs.map((tab) => p({}, tab)),\n      h(sessionButton, { onclick: startSession, label: 'Start Session' }),\n      h(sessionTasksView, { key: 'session', ...props }),\n      h(recurringTasksView, { key: 'recurring', ...props }),\n      h(completedTasksView, { key: 'completed', ...props }),\n    );\n  } else {\n    return div(\n      { className: 'tasks-bar' },\n      div({}, isLeader() ? 'Leader' : 'Follower'),\n      // props.tabs.map((tab) => p({}, tab)),\n      // pomodoro timer\n      h(pomodoroTimer, props),\n      // buttons\n      props.status === APP_ACTIVE\n        ? h(sessionButton, { onclick: pauseSession, label: 'Take Break' })\n        : h(sessionButton, { onclick: startSession, label: 'Resume' }),\n      span({}, ' '),\n      h(sessionButton, { onclick: endSession, label: 'End Session' }),\n      // active task\n      h(activeTaskView, { key: 'active', activeTask: props.sessionTasks.list[0] }),\n      // task lists\n      h(sessionTasksView, {\n        key: 'session',\n        ...props,\n        sessionTasks: { list: props.sessionTasks.list.slice(1) },\n      }),\n      h(recurringTasksView, { key: 'recurring', ...props }),\n      h(completedTasksView, { key: 'completed', ...props }),\n    );\n  }\n}\n\nconst root = document.getElementById('app') as DNode;\nrender(h(ui, appState), root);\n\nfunction redraw() {\n  console.log('redraw');\n  diff(h(ui, appState), root, root._vnode!);\n}\n\ncallback.onChange = redraw;\n"],
  "mappings": "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",
  "names": ["h", "ib", "fb", "ia", "fa", "i", "storeTask", "dom", "e", "sessionTasks", "recurringTasks", "completedTasks"]
}
